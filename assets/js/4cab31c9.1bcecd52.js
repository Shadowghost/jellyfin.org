(self.webpackChunkjellyfin_org=self.webpackChunkjellyfin_org||[]).push([[1134],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return p}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),u=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return i.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=u(t),p=r,g=d["".concat(c,".").concat(p)]||d[p]||f[p]||o;return t?i.createElement(g,l(l({ref:n},s),{},{components:t})):i.createElement(g,l({ref:n},s))}));function p(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var u=2;u<o;u++)l[u]=t[u];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1231:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var i=t(2122),r=t(9756),o=(t(7294),t(3905)),l={id:"clients-web-config",title:"Jellyfin Web Configuration"},a="Jellyfin Web Configuration",c={unversionedId:"clients/clients-web-config",id:"clients/clients-web-config",isDocsHomePage:!1,title:"Jellyfin Web Configuration",description:"Editing",source:"@site/docs/clients/web-config.md",sourceDirName:"clients",slug:"/clients/clients-web-config",permalink:"/docs/clients/clients-web-config",editUrl:"https://github.com/jellyfin/jellyfin.org/edit/master/docs/clients/web-config.md",version:"current",frontMatter:{id:"clients-web-config",title:"Jellyfin Web Configuration"},sidebar:"tutorialSidebar",previous:{title:"Mopidy",permalink:"/docs/clients/mopidy"},next:{title:"General information",permalink:"/docs/configuration/general-configuration"}},u=[{value:"Editing",id:"editing",children:[{value:"Debian/Ubuntu/Fedora/CentOS Packages",id:"debianubuntufedoracentos-packages",children:[]},{value:"Docker",id:"docker",children:[]}]},{value:"Privacy-focused changes",id:"privacy-focused-changes",children:[{value:"Google Chromecast",id:"google-chromecast",children:[]},{value:"YouTube Trailers",id:"youtube-trailers",children:[]}]}],s={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,i.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"jellyfin-web-configuration"},"Jellyfin Web Configuration"),(0,o.kt)("h2",{id:"editing"},"Editing"),(0,o.kt)("p",null,"The Jellyfin Web default interface can be configured using the ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," file in the webroot. Where this is and how to edit it depends on the installation method."),(0,o.kt)("h3",{id:"debianubuntufedoracentos-packages"},"Debian/Ubuntu/Fedora/CentOS Packages"),(0,o.kt)("p",null,"The configuration can be found at ",(0,o.kt)("inlineCode",{parentName:"p"},"/usr/share/jellyfin/web/config.json"),". This file is registered as a configuration file by the Debian packages, and any changes to the defaults will be handled by ",(0,o.kt)("inlineCode",{parentName:"p"},"apt")," on upgrade."),(0,o.kt)("h3",{id:"docker"},"Docker"),(0,o.kt)("p",null,"Overriding the default ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," can be done with an additional volume parameter to your ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command, e.g."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"--volume /path/to/config/web-config.json:/jellyfin/jellyfin-web/config.json\n")),(0,o.kt)("p",null,"We would recommend obtaining the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jellyfin/jellyfin-web/blob/master/src/config.json"},"latest copy of the file")," to pre-populate your configuration directory before starting Jellyfin for the first time; unlike most other components of this directory, it will not be created automatically on first run."),(0,o.kt)("h2",{id:"privacy-focused-changes"},"Privacy-focused changes"),(0,o.kt)("p",null,"Our default settings for the Jellyfin Web ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," file include some features that privacy-focused or completely-offline users may with to disable. Each option is detailed below."),(0,o.kt)("h3",{id:"google-chromecast"},"Google Chromecast"),(0,o.kt)("p",null,"By default, Jellyfin Web includes Chromecast-from-browser support. This requires downloading files from Google servers to support this functionality."),(0,o.kt)("p",null,"To disable it, edit ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," and remove the line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"plugins/chromecastPlayer/plugin"\n')),(0,o.kt)("p",null,"in the ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," section. Be sure to remove the last comma from the line above if this is the last line in the list."),(0,o.kt)("h3",{id:"youtube-trailers"},"YouTube Trailers"),(0,o.kt)("p",null,"By default, Jellyfin Web includes functionality to auto-load movie trailers from YouTube. This functionality is disabled within Jellyfin by default, but the resources are included in the Web config to make enabling the feature easy."),(0,o.kt)("p",null,"To disable it, edit ",(0,o.kt)("inlineCode",{parentName:"p"},"config.json")," and remove the line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'"plugins/youtubePlayer/plugin"\n')),(0,o.kt)("p",null,"in the ",(0,o.kt)("inlineCode",{parentName:"p"},"plugins")," section."))}f.isMDXComponent=!0}}]);