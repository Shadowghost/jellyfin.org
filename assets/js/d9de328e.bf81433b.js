"use strict";(self.webpackChunkjellyfin_org=self.webpackChunkjellyfin_org||[]).push([[3165],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3750:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(3117),i=n(102),o=(n(7294),n(3905)),a=["components"],l={id:"monitoring",title:"Monitoring"},c=void 0,s={unversionedId:"tips-and-tricks/monitoring",id:"tips-and-tricks/monitoring",title:"Monitoring",description:"Monitoring",source:"@site/docs/tips-and-tricks/monitoring.md",sourceDirName:"tips-and-tricks",slug:"/tips-and-tricks/monitoring",permalink:"/docs/tips-and-tricks/monitoring",draft:!1,editUrl:"https://github.com/jellyfin/jellyfin.org/edit/master/docs/tips-and-tricks/monitoring.md",tags:[],version:"current",frontMatter:{id:"monitoring",title:"Monitoring"},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/docs/tips-and-tricks/migrations"}},p={},u=[{value:"Monitoring",id:"monitoring",level:2},{value:"Health check endpoint",id:"health-check-endpoint",level:3},{value:"Prometheus metrics",id:"prometheus-metrics",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"monitoring"},"Monitoring"),(0,o.kt)("p",null,"Jellyfin has two monitoring and metrics endpoints built-in: a basic health check endpoint and a Prometheus-compatible metrics endpoint."),(0,o.kt)("h3",{id:"health-check-endpoint"},"Health check endpoint"),(0,o.kt)("p",null,"Jellyfin exposes the ",(0,o.kt)("inlineCode",{parentName:"p"},"/health")," endpoint designated for checking the status of the underlying service. Currently this will verify HTTP and database connectivity and return a ",(0,o.kt)("inlineCode",{parentName:"p"},"200 OK")," response if successful. You can see this for yourself by using ",(0,o.kt)("inlineCode",{parentName:"p"},"curl"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"curl -i http://myserver:8096/health\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"-i")," option tells ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")," to also print the HTTP response code and headers."),(0,o.kt)("h3",{id:"prometheus-metrics"},"Prometheus metrics"),(0,o.kt)("p",null,"Jellyfin can make ",(0,o.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus")," metrics available at ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics"),", but this is turned off by default to avoid unintentionally leaking this information on the public internet. To enable it, you will need to edit ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/jellyfin/system.xml")," and change this line from ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<EnableMetrics>false</EnableMetrics>\n")),(0,o.kt)("p",null,"If you have a ",(0,o.kt)("a",{parentName:"p",href:"xref:network-index#running-jellyfin-behind-a-reverse-proxy"},"reverse proxy")," configured, you can configure it to block access to the ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")," endpoint except for your internal network."))}m.isMDXComponent=!0}}]);